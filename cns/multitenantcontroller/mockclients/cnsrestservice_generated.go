// Code generated by MockGen. DO NOT EDIT.
// Source: /workspaces/azure-container-networking/cns/multitenantcontroller/multitenantoperator/multitenantcrdreconciler.go

// Package mockclients is a generated GoMock package.
package mockclients

import (
	reflect "reflect"

	cns "github.com/Azure/azure-container-networking/cns"
	types "github.com/Azure/azure-container-networking/cns/types"
	gomock "github.com/golang/mock/gomock"
)

// MockcnsRESTservice is a mock of cnsRESTservice interface.
type MockcnsRESTservice struct {
	ctrl     *gomock.Controller
	recorder *MockcnsRESTserviceMockRecorder
}

// MockcnsRESTserviceMockRecorder is the mock recorder for MockcnsRESTservice.
type MockcnsRESTserviceMockRecorder struct {
	mock *MockcnsRESTservice
}

// NewMockcnsRESTservice creates a new mock instance.
func NewMockcnsRESTservice(ctrl *gomock.Controller) *MockcnsRESTservice {
	mock := &MockcnsRESTservice{ctrl: ctrl}
	mock.recorder = &MockcnsRESTserviceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockcnsRESTservice) EXPECT() *MockcnsRESTserviceMockRecorder {
	return m.recorder
}

// CreateOrUpdateNetworkContainerInternal mocks base method.
func (m *MockcnsRESTservice) CreateOrUpdateNetworkContainerInternal(arg0 *cns.CreateNetworkContainerRequest) types.ResponseCode {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrUpdateNetworkContainerInternal", arg0)
	ret0, _ := ret[0].(types.ResponseCode)
	return ret0
}

// CreateOrUpdateNetworkContainerInternal indicates an expected call of CreateOrUpdateNetworkContainerInternal.
func (mr *MockcnsRESTserviceMockRecorder) CreateOrUpdateNetworkContainerInternal(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrUpdateNetworkContainerInternal", reflect.TypeOf((*MockcnsRESTservice)(nil).CreateOrUpdateNetworkContainerInternal), arg0)
}

// DeleteNetworkContainerInternal mocks base method.
func (m *MockcnsRESTservice) DeleteNetworkContainerInternal(arg0 cns.DeleteNetworkContainerRequest) types.ResponseCode {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteNetworkContainerInternal", arg0)
	ret0, _ := ret[0].(types.ResponseCode)
	return ret0
}

// DeleteNetworkContainerInternal indicates an expected call of DeleteNetworkContainerInternal.
func (mr *MockcnsRESTserviceMockRecorder) DeleteNetworkContainerInternal(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteNetworkContainerInternal", reflect.TypeOf((*MockcnsRESTservice)(nil).DeleteNetworkContainerInternal), arg0)
}

// GetNetworkContainerInternal mocks base method.
func (m *MockcnsRESTservice) GetNetworkContainerInternal(arg0 cns.GetNetworkContainerRequest) (cns.GetNetworkContainerResponse, types.ResponseCode) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNetworkContainerInternal", arg0)
	ret0, _ := ret[0].(cns.GetNetworkContainerResponse)
	ret1, _ := ret[1].(types.ResponseCode)
	return ret0, ret1
}

// GetNetworkContainerInternal indicates an expected call of GetNetworkContainerInternal.
func (mr *MockcnsRESTserviceMockRecorder) GetNetworkContainerInternal(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNetworkContainerInternal", reflect.TypeOf((*MockcnsRESTservice)(nil).GetNetworkContainerInternal), arg0)
}
